{"ast":null,"code":"\n// import * as React from 'react';\n// import { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; \n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Paper from '@mui/material/Paper';\n// import Box from '@mui/material/Box';\n// import Grid from '@mui/material/Grid';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import axios from \"axios\";\n// import { Form, Modal } from 'react-bootstrap'\n\n// function SignInSide() {\n//   const navigate = useNavigate(); // Initialize useNavigate hook\n//   const [error, setError] = useState(\"\"); // State to manage error message\n//   const [addNewUser, setAddNewUser] = useState(false);\n//   const [newUser, setNewUser] = useState({\"handle\" : \"\", \"userName\": \"\", \"email\": \"\", \"subscribedBlogs\": [\"\"]});\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const data = new FormData(event.currentTarget);\n//     const email = data.get('email');\n//     const password = data.get('password');\n\n//     if ((email === \"check@example.com\" && password === \"password\") || (email === \"check1@example.com\" && password === \"PASSWORD\")) {\n//       navigate('/aftersignin'); \n//     } else {\n//       setError(\"Email or password is incorrect\"); \n//     }\n//   };\n\n//   const handleSignUpClick = () => {\n//     navigate('/Signup'); // Navigate to signup page\n//   };\n\n//   const addSingleUser = () => {\n//     setAddNewUser(false);\n//     var url = \"http://localhost:9000/user/create\";\n//     axios.post(url, {\n//       \"handle\" : newUser.handle,\n//       \"userName\" : newUser.userName,\n//       \"email\" : newUser.email,\n//      // \"subscribedBlogs\" : newUser.subscribedBlogs\n//     }).then(response => {\n//       if(response.status === 200){\n//           // Logic for data refresh\n//       }\n//     });\n//   };\n\n//   return (\n//     <ThemeProvider theme={createTheme()}>\n//       <Grid container component=\"main\" sx={{ height: '100vh' }}>\n//         <CssBaseline />\n//         <Grid\n//           item\n//           xs={false}\n//           sm={4}\n//           md={7}\n//           sx={{\n//             backgroundImage: 'url(https://source.unsplash.com/random?wallpapers)',\n//             backgroundRepeat: 'no-repeat',\n//             backgroundColor: (t) =>\n//               t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n//             backgroundSize: 'cover',\n//             backgroundPosition: 'center',\n//           }}\n//         />\n//         <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n//           <Box\n//             sx={{\n//               my: 8,\n//               mx: 4,\n//               display: 'flex',\n//               flexDirection: 'column',\n//               alignItems: 'center',\n//             }}\n//           >\n//             <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//               <LockOutlinedIcon />\n//             </Avatar>\n//             <Typography component=\"h1\" variant=\"h5\">\n//               Sign in\n//             </Typography>\n//             <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n//               <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 id=\"email\"\n//                 label=\"Email Address\"\n//                 name=\"email\"\n//                 autoComplete=\"email\"\n//                 autoFocus\n//               />\n//               <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 name=\"password\"\n//                 label=\"Password\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 autoComplete=\"current-password\"\n//               />\n//               <FormControlLabel\n//                 control={<Checkbox value=\"remember\" color=\"primary\" />}\n//                 label=\"Remember me\"\n//               />\n//               <Button\n//                 type=\"submit\"\n//                 fullWidth\n//                 variant=\"contained\"\n//                 sx={{ mt: 3, mb: 2 }}\n//               >\n//                 Sign In\n//               </Button>\n//               {error && <Typography color=\"error\">{error}</Typography>}\n//               <Grid container>\n//                 <Grid item xs>\n//                   <Link to=\"/forgotpassword\" variant=\"body2\">\n//                     Forgot password?\n//                   </Link>\n//                 </Grid>\n//                 <Grid item>\n//                   <Button variant=\"body2\" onClick={() => setAddNewUser(true)}>\n//                     {\"Don't have an account? Sign Up\"}\n//                   </Button>\n//                   <Modal show={addNewUser} onHide={() => setAddNewUser(false)} centered>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>Sign up</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body>\n//                         <Form.Group>\n//                             <Form.Label >Codeforces Handle</Form.Label>\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, handle: event.target.value})}}/>\n//                             <Form.Label>Username</Form.Label>\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, userName: event.target.value})}}/>\n//                             <Form.Label >Email Address</Form.Label>\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, email: event.target.value})}}/>\n//                             {/* <Form.Label >Blogs Subscription</Form.Label>\n//                             <Form.Control  onChange={(event) => {setNewUser({...newUser, subscribedBlogs: event.target.value})}}/> */}\n//                         </Form.Group>\n//                         <Button onClick={() => addSingleUser()}>Add</Button>\n//                         <Button onClick={() => setAddNewUser(false)}>Cancel</Button>\n//                     </Modal.Body>\n//                   </Modal>\n//                 </Grid>\n//               </Grid>\n//             </Box>\n//           </Box>\n//         </Grid>\n//       </Grid>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default SignInSide;","map":{"version":3,"names":[],"sources":["C:/Users/ASUS/Desktop/frontend/my-app/src/components/SignInpg.js"],"sourcesContent":["\r\n// import * as React from 'react';\r\n// import { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom'; \r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Paper from '@mui/material/Paper';\r\n// import Box from '@mui/material/Box';\r\n// import Grid from '@mui/material/Grid';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import axios from \"axios\";\r\n// import { Form, Modal } from 'react-bootstrap'\r\n\r\n// function SignInSide() {\r\n//   const navigate = useNavigate(); // Initialize useNavigate hook\r\n//   const [error, setError] = useState(\"\"); // State to manage error message\r\n//   const [addNewUser, setAddNewUser] = useState(false);\r\n//   const [newUser, setNewUser] = useState({\"handle\" : \"\", \"userName\": \"\", \"email\": \"\", \"subscribedBlogs\": [\"\"]});\r\n\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     const data = new FormData(event.currentTarget);\r\n//     const email = data.get('email');\r\n//     const password = data.get('password');\r\n\r\n//     if ((email === \"check@example.com\" && password === \"password\") || (email === \"check1@example.com\" && password === \"PASSWORD\")) {\r\n//       navigate('/aftersignin'); \r\n//     } else {\r\n//       setError(\"Email or password is incorrect\"); \r\n//     }\r\n//   };\r\n\r\n//   const handleSignUpClick = () => {\r\n//     navigate('/Signup'); // Navigate to signup page\r\n//   };\r\n\r\n//   const addSingleUser = () => {\r\n//     setAddNewUser(false);\r\n//     var url = \"http://localhost:9000/user/create\";\r\n//     axios.post(url, {\r\n//       \"handle\" : newUser.handle,\r\n//       \"userName\" : newUser.userName,\r\n//       \"email\" : newUser.email,\r\n//      // \"subscribedBlogs\" : newUser.subscribedBlogs\r\n//     }).then(response => {\r\n//       if(response.status === 200){\r\n//           // Logic for data refresh\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <ThemeProvider theme={createTheme()}>\r\n//       <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n//         <CssBaseline />\r\n//         <Grid\r\n//           item\r\n//           xs={false}\r\n//           sm={4}\r\n//           md={7}\r\n//           sx={{\r\n//             backgroundImage: 'url(https://source.unsplash.com/random?wallpapers)',\r\n//             backgroundRepeat: 'no-repeat',\r\n//             backgroundColor: (t) =>\r\n//               t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n//             backgroundSize: 'cover',\r\n//             backgroundPosition: 'center',\r\n//           }}\r\n//         />\r\n//         <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n//           <Box\r\n//             sx={{\r\n//               my: 8,\r\n//               mx: 4,\r\n//               display: 'flex',\r\n//               flexDirection: 'column',\r\n//               alignItems: 'center',\r\n//             }}\r\n//           >\r\n//             <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n//               <LockOutlinedIcon />\r\n//             </Avatar>\r\n//             <Typography component=\"h1\" variant=\"h5\">\r\n//               Sign in\r\n//             </Typography>\r\n//             <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"email\"\r\n//                 label=\"Email Address\"\r\n//                 name=\"email\"\r\n//                 autoComplete=\"email\"\r\n//                 autoFocus\r\n//               />\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 name=\"password\"\r\n//                 label=\"Password\"\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 autoComplete=\"current-password\"\r\n//               />\r\n//               <FormControlLabel\r\n//                 control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n//                 label=\"Remember me\"\r\n//               />\r\n//               <Button\r\n//                 type=\"submit\"\r\n//                 fullWidth\r\n//                 variant=\"contained\"\r\n//                 sx={{ mt: 3, mb: 2 }}\r\n//               >\r\n//                 Sign In\r\n//               </Button>\r\n//               {error && <Typography color=\"error\">{error}</Typography>}\r\n//               <Grid container>\r\n//                 <Grid item xs>\r\n//                   <Link to=\"/forgotpassword\" variant=\"body2\">\r\n//                     Forgot password?\r\n//                   </Link>\r\n//                 </Grid>\r\n//                 <Grid item>\r\n//                   <Button variant=\"body2\" onClick={() => setAddNewUser(true)}>\r\n//                     {\"Don't have an account? Sign Up\"}\r\n//                   </Button>\r\n//                   <Modal show={addNewUser} onHide={() => setAddNewUser(false)} centered>\r\n//                     <Modal.Header closeButton>\r\n//                         <Modal.Title>Sign up</Modal.Title>\r\n//                     </Modal.Header>\r\n//                     <Modal.Body>\r\n//                         <Form.Group>\r\n//                             <Form.Label >Codeforces Handle</Form.Label>\r\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, handle: event.target.value})}}/>\r\n//                             <Form.Label>Username</Form.Label>\r\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, userName: event.target.value})}}/>\r\n//                             <Form.Label >Email Address</Form.Label>\r\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, email: event.target.value})}}/>\r\n//                             {/* <Form.Label >Blogs Subscription</Form.Label>\r\n//                             <Form.Control  onChange={(event) => {setNewUser({...newUser, subscribedBlogs: event.target.value})}}/> */}\r\n//                         </Form.Group>\r\n//                         <Button onClick={() => addSingleUser()}>Add</Button>\r\n//                         <Button onClick={() => setAddNewUser(false)}>Cancel</Button>\r\n//                     </Modal.Body>\r\n//                   </Modal>\r\n//                 </Grid>\r\n//               </Grid>\r\n//             </Box>\r\n//           </Box>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </ThemeProvider>\r\n//   );\r\n// }\r\n\r\n// export default SignInSide;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}