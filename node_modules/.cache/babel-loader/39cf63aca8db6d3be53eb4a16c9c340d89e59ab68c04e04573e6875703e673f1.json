{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\frontend\\\\my-app\\\\src\\\\components\\\\SignInpg.js\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\n// import { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; \n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Paper from '@mui/material/Paper';\n// import Box from '@mui/material/Box';\n// import Grid from '@mui/material/Grid';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import axios from \"axios\";\n// import { Form, Modal } from 'react-bootstrap'\n\n// function SignInSide() {\n//   const navigate = useNavigate(); // Initialize useNavigate hook\n//   const [error, setError] = useState(\"\"); // State to manage error message\n//   const [addNewUser, setAddNewUser] = useState(false);\n//   const [newUser, setNewUser] = useState({\"handle\" : \"\", \"userName\": \"\", \"email\": \"\", \"subscribedBlogs\": [\"\"]});\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const data = new FormData(event.currentTarget);\n//     const email = data.get('email');\n//     const password = data.get('password');\n\n//     if ((email === \"check@example.com\" && password === \"password\") || (email === \"check1@example.com\" && password === \"PASSWORD\")) {\n//       navigate('/aftersignin'); \n//     } else {\n//       setError(\"Email or password is incorrect\"); \n//     }\n//   };\n\n//   const handleSignUpClick = () => {\n//     navigate('/Signup'); // Navigate to signup page\n//   };\n\n//   const addSingleUser = () => {\n//     setAddNewUser(false);\n//     var url = \"http://localhost:9000/user/create\";\n//     axios.post(url, {\n//       \"handle\" : newUser.handle,\n//       \"userName\" : newUser.userName,\n//       \"email\" : newUser.email,\n//      // \"subscribedBlogs\" : newUser.subscribedBlogs\n//     }).then(response => {\n//       if(response.status === 200){\n//           // Logic for data refresh\n//       }\n//     });\n//   };\n\n//   return (\n//     <ThemeProvider theme={createTheme()}>\n//       <Grid container component=\"main\" sx={{ height: '100vh' }}>\n//         <CssBaseline />\n//         <Grid\n//           item\n//           xs={false}\n//           sm={4}\n//           md={7}\n//           sx={{\n//             backgroundImage: 'url(https://source.unsplash.com/random?wallpapers)',\n//             backgroundRepeat: 'no-repeat',\n//             backgroundColor: (t) =>\n//               t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n//             backgroundSize: 'cover',\n//             backgroundPosition: 'center',\n//           }}\n//         />\n//         <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n//           <Box\n//             sx={{\n//               my: 8,\n//               mx: 4,\n//               display: 'flex',\n//               flexDirection: 'column',\n//               alignItems: 'center',\n//             }}\n//           >\n//             <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//               <LockOutlinedIcon />\n//             </Avatar>\n//             <Typography component=\"h1\" variant=\"h5\">\n//               Sign in\n//             </Typography>\n//             <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n//               <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 id=\"email\"\n//                 label=\"Email Address\"\n//                 name=\"email\"\n//                 autoComplete=\"email\"\n//                 autoFocus\n//               />\n//               <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 name=\"password\"\n//                 label=\"Password\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 autoComplete=\"current-password\"\n//               />\n//               <FormControlLabel\n//                 control={<Checkbox value=\"remember\" color=\"primary\" />}\n//                 label=\"Remember me\"\n//               />\n//               <Button\n//                 type=\"submit\"\n//                 fullWidth\n//                 variant=\"contained\"\n//                 sx={{ mt: 3, mb: 2 }}\n//               >\n//                 Sign In\n//               </Button>\n//               {error && <Typography color=\"error\">{error}</Typography>}\n//               <Grid container>\n//                 <Grid item xs>\n//                   <Link to=\"/forgotpassword\" variant=\"body2\">\n//                     Forgot password?\n//                   </Link>\n//                 </Grid>\n//                 <Grid item>\n//                   <Button variant=\"body2\" onClick={() => setAddNewUser(true)}>\n//                     {\"Don't have an account? Sign Up\"}\n//                   </Button>\n//                   <Modal show={addNewUser} onHide={() => setAddNewUser(false)} centered>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>Sign up</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body>\n//                         <Form.Group>\n//                             <Form.Label >Codeforces Handle</Form.Label>\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, handle: event.target.value})}}/>\n//                             <Form.Label>Username</Form.Label>\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, userName: event.target.value})}}/>\n//                             <Form.Label >Email Address</Form.Label>\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, email: event.target.value})}}/>\n//                             {/* <Form.Label >Blogs Subscription</Form.Label>\n//                             <Form.Control  onChange={(event) => {setNewUser({...newUser, subscribedBlogs: event.target.value})}}/> */}\n//                         </Form.Group>\n//                         <Button onClick={() => addSingleUser()}>Add</Button>\n//                         <Button onClick={() => setAddNewUser(false)}>Cancel</Button>\n//                     </Modal.Body>\n//                   </Modal>\n//                 </Grid>\n//               </Grid>\n//             </Box>\n//           </Box>\n//         </Grid>\n//       </Grid>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default SignInSide;\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Button, TextField, Typography, Grid, Paper, Avatar, CssBaseline, Box, Modal, Form, FormControl, InputLabel, Input, InputAdornment, IconButton } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInSide() {\n  _s();\n  const [addNewUser, setAddNewUser] = useState(false);\n  const [newUser, setNewUser] = useState({\n    \"handle\": \"\",\n    \"userName\": \"\",\n    \"email\": \"\",\n    \"subscribedBlogs\": [\"\"]\n  });\n  const handleSignUpClick = () => {\n    setAddNewUser(true);\n  };\n  const handleClose = () => {\n    setAddNewUser(false);\n  };\n  const addSingleUser = () => {\n    // Add logic for adding single user\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: createTheme(),\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      sx: {\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 5,\n        component: Paper,\n        elevation: 6,\n        square: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 8,\n            mx: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'secondary.main'\n            },\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleSignUpClick,\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Don't have an account? Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: addNewUser,\n      onClose: handleClose,\n      \"aria-labelledby\": \"signup-modal\",\n      \"aria-describedby\": \"signup-form\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          bgcolor: 'background.paper',\n          boxShadow: 24,\n          p: 4,\n          width: 400,\n          borderRadius: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          align: \"center\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          sx: {\n            mt: 2\n          },\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              my: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"handle\",\n              children: \"Codeforces Handle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"handle\",\n              type: \"text\",\n              value: newUser.handle,\n              onChange: e => setNewUser({\n                ...newUser,\n                handle: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              my: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"username\",\n              type: \"text\",\n              value: newUser.userName,\n              onChange: e => setNewUser({\n                ...newUser,\n                userName: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              my: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"email\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"email\",\n              type: \"email\",\n              value: newUser.email,\n              onChange: e => setNewUser({\n                ...newUser,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            onClick: addSingleUser,\n            sx: {\n              mt: 2\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(SignInSide, \"LMDnllfiuOp9oS2E3gL1TKmIHYg=\");\n_c = SignInSide;\nexport default SignInSide;\nvar _c;\n$RefreshReg$(_c, \"SignInSide\");","map":{"version":3,"names":["React","useState","Button","TextField","Typography","Grid","Paper","Avatar","CssBaseline","Box","Modal","Form","FormControl","InputLabel","Input","InputAdornment","IconButton","LockOutlinedIcon","createTheme","ThemeProvider","jsxDEV","_jsxDEV","SignInSide","_s","addNewUser","setAddNewUser","newUser","setNewUser","handleSignUpClick","handleClose","addSingleUser","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","container","component","sx","height","justifyContent","alignItems","item","xs","sm","md","elevation","square","my","mx","display","flexDirection","m","bgcolor","variant","onClick","mt","mb","open","onClose","position","top","left","transform","boxShadow","p","width","borderRadius","align","noValidate","fullWidth","htmlFor","id","type","value","handle","onChange","e","target","userName","email","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/frontend/my-app/src/components/SignInpg.js"],"sourcesContent":["\r\n// import * as React from 'react';\r\n// import { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom'; \r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Paper from '@mui/material/Paper';\r\n// import Box from '@mui/material/Box';\r\n// import Grid from '@mui/material/Grid';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import axios from \"axios\";\r\n// import { Form, Modal } from 'react-bootstrap'\r\n\r\n// function SignInSide() {\r\n//   const navigate = useNavigate(); // Initialize useNavigate hook\r\n//   const [error, setError] = useState(\"\"); // State to manage error message\r\n//   const [addNewUser, setAddNewUser] = useState(false);\r\n//   const [newUser, setNewUser] = useState({\"handle\" : \"\", \"userName\": \"\", \"email\": \"\", \"subscribedBlogs\": [\"\"]});\r\n\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     const data = new FormData(event.currentTarget);\r\n//     const email = data.get('email');\r\n//     const password = data.get('password');\r\n\r\n//     if ((email === \"check@example.com\" && password === \"password\") || (email === \"check1@example.com\" && password === \"PASSWORD\")) {\r\n//       navigate('/aftersignin'); \r\n//     } else {\r\n//       setError(\"Email or password is incorrect\"); \r\n//     }\r\n//   };\r\n\r\n//   const handleSignUpClick = () => {\r\n//     navigate('/Signup'); // Navigate to signup page\r\n//   };\r\n\r\n//   const addSingleUser = () => {\r\n//     setAddNewUser(false);\r\n//     var url = \"http://localhost:9000/user/create\";\r\n//     axios.post(url, {\r\n//       \"handle\" : newUser.handle,\r\n//       \"userName\" : newUser.userName,\r\n//       \"email\" : newUser.email,\r\n//      // \"subscribedBlogs\" : newUser.subscribedBlogs\r\n//     }).then(response => {\r\n//       if(response.status === 200){\r\n//           // Logic for data refresh\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <ThemeProvider theme={createTheme()}>\r\n//       <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n//         <CssBaseline />\r\n//         <Grid\r\n//           item\r\n//           xs={false}\r\n//           sm={4}\r\n//           md={7}\r\n//           sx={{\r\n//             backgroundImage: 'url(https://source.unsplash.com/random?wallpapers)',\r\n//             backgroundRepeat: 'no-repeat',\r\n//             backgroundColor: (t) =>\r\n//               t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n//             backgroundSize: 'cover',\r\n//             backgroundPosition: 'center',\r\n//           }}\r\n//         />\r\n//         <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n//           <Box\r\n//             sx={{\r\n//               my: 8,\r\n//               mx: 4,\r\n//               display: 'flex',\r\n//               flexDirection: 'column',\r\n//               alignItems: 'center',\r\n//             }}\r\n//           >\r\n//             <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n//               <LockOutlinedIcon />\r\n//             </Avatar>\r\n//             <Typography component=\"h1\" variant=\"h5\">\r\n//               Sign in\r\n//             </Typography>\r\n//             <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"email\"\r\n//                 label=\"Email Address\"\r\n//                 name=\"email\"\r\n//                 autoComplete=\"email\"\r\n//                 autoFocus\r\n//               />\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 name=\"password\"\r\n//                 label=\"Password\"\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 autoComplete=\"current-password\"\r\n//               />\r\n//               <FormControlLabel\r\n//                 control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n//                 label=\"Remember me\"\r\n//               />\r\n//               <Button\r\n//                 type=\"submit\"\r\n//                 fullWidth\r\n//                 variant=\"contained\"\r\n//                 sx={{ mt: 3, mb: 2 }}\r\n//               >\r\n//                 Sign In\r\n//               </Button>\r\n//               {error && <Typography color=\"error\">{error}</Typography>}\r\n//               <Grid container>\r\n//                 <Grid item xs>\r\n//                   <Link to=\"/forgotpassword\" variant=\"body2\">\r\n//                     Forgot password?\r\n//                   </Link>\r\n//                 </Grid>\r\n//                 <Grid item>\r\n//                   <Button variant=\"body2\" onClick={() => setAddNewUser(true)}>\r\n//                     {\"Don't have an account? Sign Up\"}\r\n//                   </Button>\r\n//                   <Modal show={addNewUser} onHide={() => setAddNewUser(false)} centered>\r\n//                     <Modal.Header closeButton>\r\n//                         <Modal.Title>Sign up</Modal.Title>\r\n//                     </Modal.Header>\r\n//                     <Modal.Body>\r\n//                         <Form.Group>\r\n//                             <Form.Label >Codeforces Handle</Form.Label>\r\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, handle: event.target.value})}}/>\r\n//                             <Form.Label>Username</Form.Label>\r\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, userName: event.target.value})}}/>\r\n//                             <Form.Label >Email Address</Form.Label>\r\n//                             <Form.Control onChange={(event) => {setNewUser({...newUser, email: event.target.value})}}/>\r\n//                             {/* <Form.Label >Blogs Subscription</Form.Label>\r\n//                             <Form.Control  onChange={(event) => {setNewUser({...newUser, subscribedBlogs: event.target.value})}}/> */}\r\n//                         </Form.Group>\r\n//                         <Button onClick={() => addSingleUser()}>Add</Button>\r\n//                         <Button onClick={() => setAddNewUser(false)}>Cancel</Button>\r\n//                     </Modal.Body>\r\n//                   </Modal>\r\n//                 </Grid>\r\n//               </Grid>\r\n//             </Box>\r\n//           </Box>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </ThemeProvider>\r\n//   );\r\n// }\r\n\r\n// export default SignInSide;\r\nimport * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, TextField, Typography, Grid, Paper, Avatar, CssBaseline, Box, Modal, Form, FormControl, InputLabel, Input, InputAdornment, IconButton } from '@mui/material';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nfunction SignInSide() {\r\n  const [addNewUser, setAddNewUser] = useState(false);\r\n  const [newUser, setNewUser] = useState({ \"handle\": \"\", \"userName\": \"\", \"email\": \"\", \"subscribedBlogs\": [\"\"] });\r\n\r\n  const handleSignUpClick = () => {\r\n    setAddNewUser(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAddNewUser(false);\r\n  };\r\n\r\n  const addSingleUser = () => {\r\n    // Add logic for adding single user\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={createTheme()}>\r\n      <CssBaseline />\r\n      <Grid container component=\"main\" sx={{ height: '100vh', justifyContent: 'center', alignItems: 'center' }}>\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 4,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign In\r\n            </Typography>\r\n            <Button variant=\"contained\" onClick={handleSignUpClick} sx={{ mt: 3, mb: 2 }}>Don't have an account? Sign Up</Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Modal\r\n        open={addNewUser}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"signup-modal\"\r\n        aria-describedby=\"signup-form\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            width: 400,\r\n            borderRadius: 4\r\n          }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n            Sign Up\r\n          </Typography>\r\n          <Form sx={{ mt: 2 }} noValidate>\r\n            <FormControl fullWidth sx={{ my: 1 }}>\r\n              <InputLabel htmlFor=\"handle\">Codeforces Handle</InputLabel>\r\n              <Input\r\n                id=\"handle\"\r\n                type=\"text\"\r\n                value={newUser.handle}\r\n                onChange={(e) => setNewUser({ ...newUser, handle: e.target.value })}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ my: 1 }}>\r\n              <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n              <Input\r\n                id=\"username\"\r\n                type=\"text\"\r\n                value={newUser.userName}\r\n                onChange={(e) => setNewUser({ ...newUser, userName: e.target.value })}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ my: 1 }}>\r\n              <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={newUser.email}\r\n                onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              onClick={addSingleUser}\r\n              sx={{ mt: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Box>\r\n      </Modal>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignInSide;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}